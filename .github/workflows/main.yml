name: Generate DocFX Documentation

on:
  push:
    branches:
      - main

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Install DocFX
      run: |
        wget https://github.com/dotnet/docfx/releases/download/v2.58/docfx.zip
        unzip docfx.zip -d ./docfx

    - name: Check for docfx.json
      run: |
        if [ ! -f docfx_project/docfx.json ]; then
          mkdir -p docfx_project
          echo '{
            "metadata": [{"src": [{"files": ["**/*.cs", "**/*.md"], "exclude": ["**/obj/**", "**/bin/**"]}], "dest": "api"}],
            "build": {"content": [{"files": ["**/*.md", "api/**.yml"], "exclude": ["**/obj/**", "**/bin/**"]}], "resource": [{"files": ["images/**"]}], "template": ["default"], "dest": "_site"}
          }' > docfx_project/docfx.json
        fi

    - name: Generate Documentation
      run: |
        chmod +x ./docfx/docfx.exe
        mono ./docfx/docfx.exe build docfx_project/docfx.json

    - name: List DocFX output
      run: ls -R docfx_project/_site

    - name: List output directory
      run: ls _site

    - name: Echo contents of _site before deployment
      run: ls -R _site
      
    - name: Deploy to Github Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: docfx_project/_site

