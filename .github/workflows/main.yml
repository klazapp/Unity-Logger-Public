name: Unity DocFx

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Move everything inside the manual/ folder
        run: |
          mkdir -p manual
          if [ -d Documentation~ ] && [ "$(ls -A Documentation~)" ]; then
            mv -v Documentation~/* manual/
          else
            mkdir -p Documentation~
          fi
          mv -v manual Documentation~/manual

      - name: Generate index page
        run: echo 'This page redirects to the [manual](manual/).' > Documentation~/index.md

      - name: Generate main Table of Contents
        run: |
          echo '- name: Manual
            href: manual/
            homepage: manual/index.md
          - name: Scripting API
            href: api/
            homepage: api/index.md' > Documentation~/toc.yml

      - name: Generate manual Table of Contents
        run: |
          if [ -f Documentation~/manual/TableOfContents.md ]; then
            if [ -f Documentation~/manual/TableOfContents.md ]; then
              mv Documentation~/manual/TableOfContents.md Documentation~/manual/toc.md
            fi
            if [ -f Documentation~/manual/toc.md ]; then
              sed -i -e 's/*/#/g' Documentation~/manual/toc.md
              sed -i -e 's/     /#/g' Documentation~/manual/toc.md
            fi
          fi

      - name: Disable toc if not exists
        run: |
          if [ ! -f Documentation/manual/toc.md ]; then
            if [ ! -f Documentation/manual/toc.md ]; then
            sed -i '19i\            "_disableToc": {"manual/**/*.md": false},' Documentation/docfx.json
              sed -i '19i\            "_layout": {"manual/**/*.md": "landing"},'  Documentation/docfx.json
            fi
          fi

      - name: Set favicon if exists
        run: |
          faviconPattern="Documentation~/manual/images/favicon.*"
          if compgen -G $faviconPattern > /dev/null; then
            favicons=( $faviconPattern )
            faviconPath=${favicons[0]}
            relativeFaviconPath=${faviconPath:15}
            sed -i '12i\            "_appFaviconPath": "'${relativeFaviconPath}'",' Documentation/docfx.json
          fi

      - name: Set logo if exists
        run: |
          logoPattern="Documentation~/manual/images/logo.*"
          if compgen -G $logoPattern > /dev/null; then
            logos=( $logoPattern )
            logoPath=${logos[0]}
            relativeLogoPath=${logoPath:15}
            sed -i '12i\            "_appLogoPath": "'${relativeLogoPath}'",' Documentation/docfx.json
          fi

      - name: Set filter if exists
        run: |
          if [ -f Documentation~/manual/filter.yml ]; then
            sed -i '5i\        "filter": "manual/filter.yml",' Documentation/docfx.json
          elif [ -f Documentation~/manual/filter.yaml ]; then
            sed -i '5i\        "filter": "manual/filter.yaml",' Documentation/docfx.json
          fi

      - name: Dotnet Setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x

      - name: Dotnet Update
        run: dotnet tool update -g docfx

      - name: Build
        run: docfx Documentation/docfx.json

      - name: Generate redirect
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          url=$(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.html_url')
          sed -i '/<\/head>/i\      <meta http-equiv="refresh" content="0;URL='"$url"manual/'">' _site/index.html
